xcol="x",
ycol="y")
setwd("/Users/brian/Desktop/NYT/red_carpet/")
d <- read.csv("data/data_no_nyt_clean_user_aggregations", as.is=TRUE)
df_scatter
plot_df <- subset(d, select=c('only_slides', 'n_events', 'total_time'))
head(plot_df)
d <- read.csv("data/data_no_nyt_clean_user_aggregations", as.is=TRUE)
outlier removal fx
remove_outliers <- function(df, x, low, high, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(low, high), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
df[!is.na(y),]
}
d <- remove_outliers(d, d$total_time, low=0.005, high=0.995)
err <- which(d$total_time<1 & d$n_events>10)
d <- d[-err, ]
plot_df <- subset(d, select=c('only_slides', 'n_events', 'total_time'))
plot_df <- subset(d, select=c('only_slides', 'n_events', 'total_time'))
charrrt(df_scatter,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="RdYlBu",
xcol="total_time",
ycol="n_events")
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="RdYlBu",
xcol="total_time",
ycol="n_events")
require("scales")
p <- brewer.pal(5, "Blues")
alpha(p, 0.3)
raw_palette <- alpha(raw_palette, alph)
setwd("~/Dropbox/code/highchARRRts")
library("devtools")
load_all(".")
document(".")
setwd("~/Dropbox/code/highchARRRts")
library("devtools")
load_all(".")
setwd("/Users/brian/Desktop/NYT/red_carpet/")
d <- read.csv("data/data_no_nyt_clean_user_aggregations", as.is=TRUE)
outlier removal fx
remove_outliers <- function(df, x, low, high, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(low, high), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
df[!is.na(y),]
}
d <- remove_outliers(d, d$total_time, low=0.005, high=0.995)
err <- which(d$total_time<1 & d$n_events>10)
d <- d[-err, ]
plot_df <- subset(d, select=c('only_slides', 'n_events', 'total_time'))
scatter example
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="RdYlBu",
alph=0.3,
xcol="total_time",
ycol="n_events")
raw_palette <- alpha(raw_palette, alph)
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="Spectral",
alph=0.3,
xcol="total_time",
ycol="n_events")
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="Spectral",
alph=1,
xcol="total_time",
ycol="n_events")
col2rgb(#EFF3FF4D, alpha = TRUE)
col2rgb(""#EFF3FF4D", alpha = TRUE)
""
col2rgb("#EFF3FF4D", alpha = TRUE)
col2rgb(c("#EFF3FF4D","#EFF3FF4D") alpha = TRUE)
col2rgb(c("#EFF3FF4D","#EFF3FF4D"), alpha = TRUE)
rgba <- col2rgb(c("#EFF3FF4D","#EFF3FF4D"), alpha = TRUE)
rgba[1]
paste0('rgba(', rgba[1], ',', rgba[2], ',', rgba[3], ',', rgba[4], ')')
hex_to_high_chart_rgba <- function(color) {
rgba <- col2rgb(color, alpha=TRUE)
paste0('rgba(', rgba[1], ',', rgba[2], ',', rgba[3], ',', rgba[4], ')')
}
setwd("~/Dropbox/code/highchARRRts")
library("devtools")
load_all(".")
setwd("/Users/brian/Desktop/NYT/red_carpet/")
d <- read.csv("data/data_no_nyt_clean_user_aggregations", as.is=TRUE)
outlier removal fx
remove_outliers <- function(df, x, low, high, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(low, high), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
df[!is.na(y),]
}
d <- remove_outliers(d, d$total_time, low=0.005, high=0.995)
err <- which(d$total_time<1 & d$n_events>10)
d <- d[-err, ]
plot_df <- subset(d, select=c('only_slides', 'n_events', 'total_time'))
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="Spectral",
alph=0.5,
xcol="total_time",
ycol="n_events")
setwd("~/Dropbox/code/highchARRRts")
library("devtools")
load_all(".")
setwd("/Users/brian/Desktop/NYT/red_carpet/")
d <- read.csv("data/data_no_nyt_clean_user_aggregations", as.is=TRUE)
outlier removal fx
remove_outliers <- function(df, x, low, high, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(low, high), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
df[!is.na(y),]
}
d <- remove_outliers(d, d$total_time, low=0.005, high=0.995)
err <- which(d$total_time<1 & d$n_events>10)
d <- d[-err, ]
plot_df <- subset(d, select=c('only_slides', 'n_events', 'total_time'))
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="Spectral",
alph=0.5,
xcol="total_time",
ycol="n_events")
setwd("~/Dropbox/code/highchARRRts")
library("devtools")
load_all(".")
setwd("/Users/brian/Desktop/NYT/red_carpet/")
d <- read.csv("data/data_no_nyt_clean_user_aggregations", as.is=TRUE)
outlier removal fx
remove_outliers <- function(df, x, low, high, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(low, high), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
df[!is.na(y),]
}
d <- remove_outliers(d, d$total_time, low=0.005, high=0.995)
err <- which(d$total_time<1 & d$n_events>10)
d <- d[-err, ]
plot_df <- subset(d, select=c('only_slides', 'n_events', 'total_time'))
scatter example
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="Spectral",
alph=0.5,
xcol="total_time",
ycol="n_events")
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="Spectral",
alph=0.1,
xcol="total_time",
ycol="n_events")
scatter example
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="Spectral",
alph=0.2,
xcol="total_time",
ycol="n_events")
setwd("~/Dropbox/code/highchARRRts")
library("devtools")
load_all(".")
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="Spectral",
alph=0.2,
xcol="total_time",
ycol="n_events")
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="Blues",
alph=0.2,
xcol="total_time",
ycol="n_events")
charrrt(plot_df,
type="scatter",
main="Title",
xlab="X-Label",
ylab="Y-Label",
output = "chart_output",
pal="Blues",
alph=0.2,
xcol="total_time",
ycol="n_events")
