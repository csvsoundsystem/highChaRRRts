<!DOCTYPE HTML>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<title>Highcharts Example</title>

        <style>
            #chart-container{
                min-width: 400px;
                height: 400px;
                margin: 0 auto;
            }
        </style>
		<script type="text/javascript" src="libs/jquery-1.9.1.min.js"></script>
        <script src="libs/highcharts.js"></script>
        <script src="libs/miso.ds.deps.ie.0.4.1.js"></script>
    </head>
    <body>

        <div id="chart-container"></div>

    	<script type="text/javascript">
                (function(){

                    var chart;
                    var ds = new Miso.Dataset({
                        url : 'csv/data_wide.csv',
                        delimiter: ','
                    });

                    ds.fetch({ 
                        success : function() {
                            var series_data = constructDataSeries(ds);
                            var column_names = constructColumnNames(ds)
                            buildGraph(ds, series_data, column_names);
                        },
                        error: function(){
                            alert('Oh no! There was an error.')
                        }
                    });

                    function constructDataSeries(ds){
                        var series = [];
                        var rows = ds.toJSON();
                        var first_col_name = ds.columnNames()[0];

                        // For each row
                        _.each(rows, function(row){
                            var row_values = []

                            // For each column, start at 1 to skip the first column which holds the name
                            for (var i = 1; i < ds.columnNames().length; i++){
                                row_values.push(row[ds.columnNames()[i]])
                            }

                            // Create a highchart series data object
                            var obj = {
                                name: row[ds.columnNames()[0]],
                                data: row_values
                    
                            }
                            series.push(obj);
                        });
                        return series;

                    }

                    function constructColumnNames(ds){
                        var col_names = [];
                        // For each column, start at 1 to skip the first column which holds the name
                        for (var i = 1; i < ds.columnNames().length; i++){
                            col_names.push(ds.columnNames()[i])
                        }
                        return col_names;

                    }

                    function buildGraph(ds, series_data, column_names){
                        chart = new Highcharts.Chart({
                            chart: {
                                renderTo: 'chart-container',
                                type: 'column'
                            },
                            title: {
                                text: 'Monthly Average Rainfall'
                            },
                            subtitle: {
                                text: 'Source: WorldClimate.com'
                            },
                            xAxis: {
                                categories: column_names
                            },
                            yAxis: {
                                min: 0,
                                title: {
                                    text: 'Rainfall (mm)'
                                }
                            },
                            legend: {
                                layout: 'vertical',
                                backgroundColor: '#FFFFFF',
                                align: 'left',
                                verticalAlign: 'top',
                                x: 100,
                                y: 70,
                                floating: true,
                                shadow: true
                            },
                            tooltip: {
                                formatter: function() {
                                    return ''+
                                        this.x +': '+ this.y +' mm';
                                }
                            },
                            plotOptions: {
                                column: {
                                    pointPadding: 0.2,
                                    borderWidth: 0
                                }
                            },
                                series: series_data
                        });
                    }
                
                }).call(this);
    	</script>
	</body>
</html>
